import { chromium } from "playwright"; import fs from "fs-extra"; import path from "path"; const extractImagesFromPages = async () => { console.log("🖼️ Startar bildextraherare..."); const browser = await chromium.launch({ headless: true }); const page = await browser.newPage(); const dataFile = "scraped-data-complete/complete-dataset.json"; const data = await fs.readJson(dataFile); const pages = data.pages; const imagesDir = "extracted-images"; await fs.ensureDir(imagesDir); const pagesWithImages = []; for (let i = 0; i < pages.length; i++) { const pageData = pages[i]; console.log(`📄 ${i + 1}/${pages.length}: ${pageData.title}`); try { await page.goto(pageData.url, { waitUntil: "networkidle" }); const images = await page.evaluate(() => { const imgs = Array.from(document.querySelectorAll("img")); return imgs.map((img, index) => ({ src: img.src, alt: img.alt || "", width: img.naturalWidth, height: img.naturalHeight, index: index })).filter(img => img.src && !img.src.includes("data:") && img.width > 50 && img.height > 50); }); const pageImages = []; for (const img of images) { try { const response = await page.goto(img.src); if (response && response.ok()) { const buffer = await response.body(); const ext = path.extname(new URL(img.src).pathname) || ".jpg"; const filename = `page-${i}-img-${img.index}${ext}`; const filepath = path.join(imagesDir, filename); await fs.writeFile(filepath, buffer); pageImages.push({ filename: filename, alt: img.alt, width: img.width, height: img.height, originalSrc: img.src }); console.log(`  ✅ Sparad: ${filename}`); } } catch (error) { console.log(`  ❌ Fel med bild: ${img.src}`); } } pagesWithImages.push({ ...pageData, images: pageImages }); await new Promise(resolve => setTimeout(resolve, 1000)); } catch (error) { console.log(`❌ Fel med sida: ${pageData.url}`); pagesWithImages.push({ ...pageData, images: [] }); } } await browser.close(); const outputData = { metadata: { ...data.metadata, extractedAt: new Date().toISOString(), totalImages: pagesWithImages.reduce((sum, page) => sum + page.images.length, 0) }, pages: pagesWithImages }; await fs.writeJson("scraped-data-with-images.json", outputData, { spaces: 2 }); console.log(`🎉 Klart! Extraherade bilder från ${pages.length} sidor`); console.log(`📁 Bilder sparade i: ${imagesDir}/`); console.log(`📄 Data sparad i: scraped-data-with-images.json`); }; extractImagesFromPages().catch(console.error);
