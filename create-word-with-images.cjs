const fs = require("fs"); const { Document, Packer, Paragraph, TextRun, HeadingLevel, ImageRun } = require("docx"); const path = require("path"); const scrapedData = JSON.parse(fs.readFileSync("scraped-data-with-images.json", "utf8")); async function createWordWithImages() { const doc = new Document({ sections: [{ properties: {}, children: [ new Paragraph({ text: "Flex HRM - Komplett Dokumentation", heading: HeadingLevel.TITLE }), new Paragraph({ text: "133 sidor • 46,787 ord • 215 bilder", heading: HeadingLevel.HEADING_2 }), new Paragraph({ text: "" }), ...scrapedData.pages.flatMap(page => { const elements = [ new Paragraph({ text: page.title, heading: HeadingLevel.HEADING_1 }), new Paragraph({ text: page.breadcrumbs || "", heading: HeadingLevel.HEADING_2 }) ]; page.content.split("\n").filter(line => line.trim()).forEach(line => { elements.push(new Paragraph({ children: [new TextRun({ text: line.trim() })] })); }); if (page.images && page.images.length > 0) { page.images.forEach(img => { try { const imagePath = path.join(__dirname, img.localPath); if (fs.existsSync(imagePath)) { elements.push(new Paragraph({ children: [new ImageRun({ data: fs.readFileSync(imagePath), transformation: { width: 400, height: 300 } })] })); } } catch (e) { console.log("Skipping image:", img.localPath); } }); } elements.push(new Paragraph({ text: "" })); return elements; }) ] }] }); const buffer = await Packer.toBuffer(doc); fs.writeFileSync("flex-hrm-word-with-images.docx", buffer); console.log("Word document with images created!"); } createWordWithImages().catch(console.error);
